{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","index","onClick","nextQuestion","handleAnswerButtonClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.681263a7.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\nfunction App() {\n  \n  const questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many continents on earth?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '5', isCorrect: false },\n\t\t\t\t{ answerText: '8', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n    },\n    {\n\t\t\tquestionText: 'What is the oldest country in the world?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'China', isCorrect: false },\n\t\t\t\t{ answerText: 'Egypt', isCorrect: false },\n\t\t\t\t{ answerText: 'Iran', isCorrect: false },\n\t\t\t\t{ answerText: 'San Marino', isCorrect: true },\n\t\t\t],\n    },\n    {\n\t\t\tquestionText: 'Which country won FIFA world cup 1994?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Brazil', isCorrect: true },\n\t\t\t\t{ answerText: 'Germany', isCorrect: false },\n\t\t\t\t{ answerText: 'Argentina', isCorrect: true },\n\t\t\t\t{ answerText: 'France', isCorrect: false },\n\t\t\t],\n    },\n    \n    {\n\t\t\tquestionText: 'What is the closest star to earth?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Rigil Kentaurus\t', isCorrect: false },\n\t\t\t\t{ answerText: 'Proxima Centauri', isCorrect: true },\n\t\t\t\t{ answerText: \"Barnard's Star\", isCorrect: false },\n\t\t\t\t{ answerText: 'Luyten', isCorrect: false },\n\t\t\t],\n    },\n    \n    {\n\t\t\tquestionText: 'How many months in the calendar year have exactly 30 days?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '5', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: true },\n\t\t\t\t{ answerText: '3', isCorrect: false },\n\t\t\t],\n    },\n\t];\n  \n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n\n\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    const nextQuestion = currentQuestion + 1;\n\n    if(isCorrect){\n      setScore(score + 1)\n    }\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n\n    setCurrentQuestion(nextQuestion);\n  };\n\n  \n  return (\n    <div className=\"app\">\n      {showScore ? (\n\t\t\t\t<div className='score-section'>You scored {score} out of {questions.length}</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n                {questions[currentQuestion].answerOptions.map((answerOption, index) => (\n\t\t                <button onClick={() => handleAnswerButtonClick(answerOption.isCorrect)} className=\"btn\">{answerOption.answerText}</button>\n\t              ))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}